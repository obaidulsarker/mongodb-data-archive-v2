variables:
  DCR_REGISTRY: "registry.abc.harbor"
  IMAGE_NAME: "mongo-db-archive"
  IMAGE_NAME_NOTIFICATION: "mongo-db-archive-notification"
  LATEST_TAG: "latest"

stages:
  - build
  - push

before_script:
  # Determine APP_VERSION based on branch or tag
  - |
    if [ -n "$CI_COMMIT_TAG" ]; then
      # Use tag directly for production builds
      export APP_VERSION=$CI_COMMIT_TAG
    else
      # Use branch name and short commit SHA for development builds
      export APP_VERSION=$(echo $CI_COMMIT_REF_NAME | sed -E 's/(dev-|qa-|all-)?([^ ]*)$/\2/')-$CI_COMMIT_SHORT_SHA
    fi
    echo "Using APP_VERSION: $APP_VERSION"
    echo "Using LATEST_TAG: $LATEST_TAG"

build_images:
  stage: build
  script:
    - echo "Building images with tags $APP_VERSION and $LATEST_TAG"
    # Build and tag both mongo-db-archive and mongo-db-archive-notification
    - docker build -t $IMAGE_NAME:$APP_VERSION -t $IMAGE_NAME:$LATEST_TAG -f Dockerfile .
    - docker build -t $IMAGE_NAME_NOTIFICATION:$APP_VERSION -t $IMAGE_NAME_NOTIFICATION:$LATEST_TAG -f Dockerfile-notification .
  tags:
    - Foodi-Dev-Build-Server
  only:
    - tags  # Include tag builds

push_images:
  stage: push
  script:
    - echo "Pushing images with tags $APP_VERSION and $LATEST_TAG to $DCR_REGISTRY"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $DCR_REGISTRY

    # Push mongo-db-archive with both tags
    - docker tag $IMAGE_NAME:$APP_VERSION $DCR_REGISTRY/mongo-db-archive/$IMAGE_NAME:$APP_VERSION
    - docker push $DCR_REGISTRY/mongo-db-archive/$IMAGE_NAME:$APP_VERSION
    - docker tag $IMAGE_NAME:$LATEST_TAG $DCR_REGISTRY/mongo-db-archive/$IMAGE_NAME:$LATEST_TAG
    - docker push $DCR_REGISTRY/mongo-db-archive/$IMAGE_NAME:$LATEST_TAG

    # Push mongo-db-archive-notification with both tags
    - docker tag $IMAGE_NAME_NOTIFICATION:$APP_VERSION $DCR_REGISTRY/mongo-db-archive/$IMAGE_NAME_NOTIFICATION:$APP_VERSION
    - docker push $DCR_REGISTRY/mongo-db-archive/$IMAGE_NAME_NOTIFICATION:$APP_VERSION
    - docker tag $IMAGE_NAME_NOTIFICATION:$LATEST_TAG $DCR_REGISTRY/mongo-db-archive/$IMAGE_NAME_NOTIFICATION:$LATEST_TAG
    - docker push $DCR_REGISTRY/mongo-db-archive/$IMAGE_NAME_NOTIFICATION:$LATEST_TAG

    # Remove local images to save space
    - docker rmi $IMAGE_NAME:$APP_VERSION $IMAGE_NAME:$LATEST_TAG
    - docker rmi $IMAGE_NAME_NOTIFICATION:$APP_VERSION $IMAGE_NAME_NOTIFICATION:$LATEST_TAG
    - docker rmi $DCR_REGISTRY/mongo-db-archive/$IMAGE_NAME:$APP_VERSION
    - docker rmi $DCR_REGISTRY/mongo-db-archive/$IMAGE_NAME:$LATEST_TAG
    - docker rmi $DCR_REGISTRY/mongo-db-archive/$IMAGE_NAME_NOTIFICATION:$APP_VERSION
    - docker rmi $DCR_REGISTRY/mongo-db-archive/$IMAGE_NAME_NOTIFICATION:$LATEST_TAG
  tags:
    - Dev-Build-Server
  only:
    - tags  # Include tag builds
